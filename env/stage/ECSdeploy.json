{
    "Description": "This template deploys an ECS cluster to the provided VPC and subnets  using an Auto Scaling Group\n",
    "Parameters": {
        "EnvironmentName": {
            "Description": "An environment name that will be prefixed to resource names",
            "Type": "String",
            "Default": "test"
        },
        "InstanceType": {
            "Description": "Which instance type should we use to build the ECS cluster?",
            "Type": "String",
            "Default": "t2.micro"
        },
        "ClusterSize": {
            "Description": "How many ECS hosts do you want to initially deploy?",
            "Type": "Number",
            "Default": 1
        },
        "VPC": {
            "Description": "Choose which VPC this ECS cluster should be deployed to",
            "Type": "AWS::EC2::VPC::Id",
            "Default": "vpc-0375b86a"

        },
        "Subnets": {
            "Description": "Choose which subnets this ECS cluster should be deployed to",
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Default": "subnet-1a797450,subnet-5f17f824"
        },
        "SecurityGroup": {
            "Description": "Select the Security Group to use for the ECS cluster hosts",
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Default": "sg-f515cd9c"
        }
    },
    "Mappings": {
        "AWSRegionToAMI": {
            "us-east-1": {
                "AMI": "ami-b2df2ca4"
            },
            "us-east-2": {
                "AMI": "ami-43d0f626"
            },
            "us-west-1": {
                "AMI": "ami-dd104dbd"
            },
            "us-west-2": {
                "AMI": "ami-022b9262"
            },
            "eu-west-1": {
                "AMI": "ami-a7f2acc1"
            },
            "eu-west-2": {
                "AMI": "ami-3fb6bc5b"
            },
            "eu-central-1": {
                "AMI": "ami-ec2be583"
            },
            "ap-northeast-1": {
                "AMI": "ami-c393d6a4"
            },
            "ap-southeast-1": {
                "AMI": "ami-a88530cb"
            },
            "ap-southeast-2": {
                "AMI": "ami-8af8ffe9"
            },
            "ca-central-1": {
                "AMI": "ami-ead5688e"
            }
        }
    },
    "Resources": {
        "ECSCluster": {
            "Type": "AWS::ECS::Cluster",
            "Properties": {
                "ClusterName": {
                    "Ref": "EnvironmentName"
                }
            }
        },
        "ECSAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": {
                    "Ref": "Subnets"
                },
                "LaunchConfigurationName": {
                    "Ref": "ECSLaunchConfiguration"
                },
                "MinSize": {
                    "Ref": "ClusterSize"
                },
                "MaxSize": {
                    "Ref": "ClusterSize"
                },
                "DesiredCapacity": {
                    "Ref": "ClusterSize"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${EnvironmentName} ECS host"
                        },
                        "PropagateAtLaunch": true
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT15M"
                }
            },
            "UpdatePolicy": {
                "AutoScalingRollingUpdate": {
                    "MinInstancesInService": 1,
                    "MaxBatchSize": 1,
                    "PauseTime": "PT15M",
                    "WaitOnResourceSignals": true
                }
            }
        },
        "ECSLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionToAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "ECSInstanceProfile"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Sub": "#!/bin/bash\nyum install -y aws-cfn-bootstrap\n/opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource ECSLaunchConfiguration\n/opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource ECSAutoScalingGroup\n"
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "commands": {
                            "01_add_instance_to_cluster": {
                                "command": {
                                    "Fn::Sub": "echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config"
                                }
                            }
                        },
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "mode": 256,
                                "owner": "root",
                                "group": "root",
                                "content": {
                                    "Fn::Sub": "[main]\nstack=${AWS::StackId}\nregion=${AWS::Region}\n"
                                }
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Sub": "[cfn-auto-reloader-hook]\ntriggers=post.update\npath=Resources.ContainerInstances.Metadata.AWS::CloudFormation::Init\naction=/opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource ECSLaunchConfiguration\n"
                                }
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": true,
                                    "ensureRunning": true,
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "ECSRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "RoleName": {
                    "Fn::Sub": "${EnvironmentName}-ECSRole-${AWS::Region}"
                },
                "AssumeRolePolicyDocument": "{\n    \"Statement\": [{\n        \"Action\": \"sts:AssumeRole\",\n        \"Effect\": \"Allow\",\n        \"Principal\": { \n            \"Service\": \"ec2.amazonaws.com\" \n        }\n    }]\n}\n",
                "Policies": [
                    {
                        "PolicyName": "ecs-service",
                        "PolicyDocument": "{\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"ecs:CreateCluster\",\n            \"ecs:DeregisterContainerInstance\",\n            \"ecs:DiscoverPollEndpoint\",\n            \"ecs:Poll\",\n            \"ecs:RegisterContainerInstance\",\n            \"ecs:StartTelemetrySession\",\n            \"ecs:Submit*\",\n            \"logs:CreateLogStream\",\n            \"logs:PutLogEvents\",\n            \"ecr:BatchCheckLayerAvailability\",\n            \"ecr:BatchGetImage\",\n            \"ecr:GetDownloadUrlForLayer\",\n            \"ecr:GetAuthorizationToken\"\n        ],\n        \"Resource\": \"*\"\n    }]\n}\n"
                    }
                ]
            }
        },
        "ECSInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "ECSRole"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "Cluster": {
            "Description": "A reference to the ECS cluster",
            "Value": {
                "Ref": "ECSCluster"
            }
        }
    }
}
